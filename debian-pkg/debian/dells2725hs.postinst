#!/bin/bash

# Exit script on first failure.
set -e

# Exit on unset variable.
set -u

readonly DELLS2725HS_USER="dells2725hs"
readonly DELLS2725HS_GROUP="dells2725hs"
readonly DELLS2725HS_HOME_DIR="/home/${DELLS2725HS_USER}"

# Create dells2725hs group if it doesn't already exist.
getent group "${DELLS2725HS_GROUP}" > /dev/null || \
  addgroup \
    --system \
    "${DELLS2725HS_GROUP}"

# adduser is idempotent, so we don't need to check existence first.
adduser \
  --system \
  `# We have to specify a shell to override the default /usr/sbin/nologin, ` \
  `# which prevents us from executing commands through "sudo su".` \
  --shell /bin/bash \
  --ingroup "${DELLS2725HS_GROUP}" \
  --home "${DELLS2725HS_HOME_DIR}" \
  "${DELLS2725HS_USER}"

chown -R "${DELLS2725HS_USER}:${DELLS2725HS_GROUP}" /opt/dells2725hs

# Enable the dwc2 kernel driver, which we need to emulate USB devices with USB
# OTG.
readonly MODULES_PATH='/etc/modules'
if ! grep --quiet '^dwc2$' "${MODULES_PATH}" ; then
  echo 'dwc2' | tee --append "${MODULES_PATH}"
fi
readonly BOOT_CONFIG_PATH='/boot/config.txt'
if ! grep --quiet '^dtoverlay=dwc2$' "${BOOT_CONFIG_PATH}" ; then
  echo 'dtoverlay=dwc2' | tee --append "${BOOT_CONFIG_PATH}"
fi

# Create DELL_S2725HS settings file if it doesn't already exist.
readonly DELLS2725HS_SETTINGS_FILE="${DELLS2725HS_HOME_DIR}/settings.yml"
if [[ ! -f "${DELLS2725HS_SETTINGS_FILE}" ]]; then
  touch "${DELLS2725HS_SETTINGS_FILE}"
  chown "${DELLS2725HS_USER}:${DELLS2725HS_GROUP}" "${DELLS2725HS_SETTINGS_FILE}"

  # Make DELL_S2725HS settings world readable so that the uStreamer launcher script
  # can access it via a symbolic link.
  chmod 0644 "${DELLS2725HS_SETTINGS_FILE}"
fi

# Populate DELL_S2725HS's Flask settings file.
pushd /opt/dells2725hs
readonly DELLS2725HS_APP_SETTINGS='/home/dells2725hs/app_settings.cfg'
SETTINGS_TEMPLATE="$(cat <<-'EOF'
# This configuration file is an actual Python file. Only variables in uppercase
# are recognized as config keys.

KEYBOARD_PATH = '{{ DellS2725HS_keyboard_interface }}'
MOUSE_PATH = '{{ DellS2725HS_mouse_interface }}'
EOF
)"
readonly SETTINGS_TEMPLATE
. venv/bin/activate
runuser dells2725hs \
  --command 'PYTHONPATH=/opt/dells2725hs/app ./scripts/render-template' \
  <<< "${SETTINGS_TEMPLATE}" \
  > "${DELLS2725HS_APP_SETTINGS}"
deactivate
chown "${DELLS2725HS_USER}:${DELLS2725HS_GROUP}" "${DELLS2725HS_APP_SETTINGS}"
popd

# Populate DELL_S2725HS's NGINX config file.
pushd /opt/dells2725hs
. venv/bin/activate
runuser dells2725hs \
  --command 'PYTHONPATH=/opt/dells2725hs/app ./scripts/render-template' \
  < /usr/share/dells2725hs/templates/dells2725hs.conf.j2 \
  > /etc/nginx/conf.d/dells2725hs.conf
deactivate
popd

# Workaround to restore the default NGINX config that has been previously
# modified by ansible-role-nginx. We can remove this on DELL_S2725HS's next
# checkpoint release.
if grep --silent 'dells2725hs' /etc/nginx/nginx.conf; then
  cp \
    /usr/share/dells2725hs/nginx.conf \
    /etc/nginx/nginx.conf
fi

tc358743_overlay_enabled='false'
if grep --silent '^dtoverlay=tc358743$' "${BOOT_CONFIG_PATH}" ; then
  tc358743_overlay_enabled='true'

  # Enable TC358743-audio overlay in /boot/config.txt.
  # Note that the tc358743-audio overlay depends on the tc358743 overlay.
  sed --in-place --expression '/dtoverlay=tc358743-audio/d' "${BOOT_CONFIG_PATH}"
  sed --in-place '/dtoverlay=tc358743/ a dtoverlay=tc358743-audio' "${BOOT_CONFIG_PATH}"

  # Set GPU memory to 256MB in /boot/config.txt
  if grep --silent '^gpu_mem=' "${BOOT_CONFIG_PATH}" ; then
    sed --in-place '/^gpu_mem=/ c\gpu_mem=256' "${BOOT_CONFIG_PATH}"
  else
    echo 'gpu_mem=256' | tee --append "${BOOT_CONFIG_PATH}"
  fi

  # Populate DELL_S2725HS's EDID.
  mkdir -p /home/ustreamer/edids
  pushd /opt/dells2725hs
  . venv/bin/activate
  runuser dells2725hs \
    --command 'PYTHONPATH=/opt/dells2725hs/app ./scripts/render-template' \
    <<< '{{ ustreamer_edid }}' \
    > /home/ustreamer/edids/tc358743-edid.hex
  deactivate
  chmod 0644 /home/ustreamer/edids/tc358743-edid.hex
  popd
fi

# Populate DELL_S2725HS's Janus settings file.
readonly JANUS_PLUGIN_USTREAMER_CONFIG='/etc/janus/janus.plugin.ustreamer.jcfg'
cat <<EOF > "${JANUS_PLUGIN_USTREAMER_CONFIG}"
video: {
    sink = "dells2725hs::ustreamer::h264"
}
EOF

# Append audio settings if TC358743 support is enabled.
# (acap = “audio capture”)
if "${tc358743_overlay_enabled}" ; then
  cat <<EOF >> "${JANUS_PLUGIN_USTREAMER_CONFIG}"
acap: {
    device = "hw:1"
    tc358743 = "/dev/video0"
}
EOF
fi

# Clean up the legacy DELL_S2725HS-specific config file for uStreamer. We can
# remove this on DELL_S2725HS's next checkpoint release.
readonly USTREAMER_ANSIBLE_CONFIG='/home/ustreamer/config.yml'
if [[ -f "${USTREAMER_ANSIBLE_CONFIG}" ]]; then
  rm "${USTREAMER_ANSIBLE_CONFIG}"
fi

# Workaround to remove settings that are not user-configurable to avoid
# inconsistent config. We can remove this on DELL_S2725HS's next checkpoint
# release.
sed \
  --in-place \
  --expression '/ustreamer_port/d' \
  --expression '/ustreamer_persistent/d' \
  "${DELLS2725HS_SETTINGS_FILE}"

# Create a directory for uStreamer launcher configs.
readonly USTREAMER_LAUNCHER_BASE_DIR='/opt/ustreamer-launcher'
readonly USTREAMER_LAUNCHER_CONFIG_DIR="${USTREAMER_LAUNCHER_BASE_DIR}/configs.d"
mkdir -p "${USTREAMER_LAUNCHER_CONFIG_DIR}"

# Figure out which uStreamer settings file to use.
USTREAMER_CONFIG_TARGET="${USTREAMER_LAUNCHER_BASE_DIR}/config-library/hdmi-to-usb.yml"
if "${tc358743_overlay_enabled}" ; then
  USTREAMER_CONFIG_TARGET="${USTREAMER_LAUNCHER_BASE_DIR}/config-library/tc358743.yml"
fi
readonly USTREAMER_CONFIG_TARGET

readonly USTREAMER_BASE_CONFIG_FILE="${USTREAMER_LAUNCHER_CONFIG_DIR}/000-defaults.yml"

# If the base configuration file is not a symlink to the correct file, remove
# it. This can happen if the user has previously installed with a different
# configuration (e.g., the user installs with the default HDMI to USB adapter
# and then switches to the TC358743 adapter).
if [[ -e "${USTREAMER_BASE_CONFIG_FILE}" ]] && \
    [[ ! "${USTREAMER_BASE_CONFIG_FILE}" -ef "${USTREAMER_CONFIG_TARGET}" ]]; \
      then
  rm "${USTREAMER_BASE_CONFIG_FILE}"
fi

# Create the base configuration file if it doesn't already exist.
if [[ ! -e "${USTREAMER_BASE_CONFIG_FILE}" ]]; then
  ln \
    --symbolic \
    "${USTREAMER_CONFIG_TARGET}" \
    "${USTREAMER_BASE_CONFIG_FILE}"
fi

# Use DELL_S2725HS's settings to override uStreamer's runtime variables.
readonly DELLS2725HS_USTREAMER_OVERRIDES_FILE="${USTREAMER_LAUNCHER_CONFIG_DIR}/100-dells2725hs.yml"
if [[ ! -L "${DELLS2725HS_USTREAMER_OVERRIDES_FILE}" ]]; then
  ln \
    --symbolic \
    "${DELLS2725HS_SETTINGS_FILE}" \
    "${DELLS2725HS_USTREAMER_OVERRIDES_FILE}"
fi

# Disable default NGINX server.
rm -f \
  /etc/nginx/sites-enabled/default

# Test and reload NGINX config.
nginx -t
if deb-systemd-invoke is-active nginx; then
  deb-systemd-invoke reload nginx
else
  deb-systemd-invoke start nginx
fi

# Restore the Janus config files.
/opt/dells2725hs-privileged/scripts/configure-janus
cp \
  /usr/share/dells2725hs/janus.transport.websockets.jcfg \
  /etc/janus/janus.transport.websockets.jcfg

# Override Janus systemd config.
cp \
  /usr/share/dells2725hs/janus.service \
  /etc/systemd/system/janus.service

# Restart Janus to pick up the new config files.
deb-systemd-invoke restart janus

#DEBHELPER#
