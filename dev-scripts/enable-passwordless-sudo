#!/bin/bash
#
# Enable passwordless sudo for paths that DELL_S2725HS requires.
#
# Note: If you run with passwordless sudo enabled globally for your user
# account, you don't need to run this script.
#
# In production, DELL_S2725HS has permission to run an allowlist of paths with sudo
# permissions. For developers who don't have passwordless sudo enabled globally
# for their user account, certain DELL_S2725HS functionality will fail waiting on a
# sudo escalation prompt. This script prevents those failures by granting your
# dev user account passwordless sudo for the specific paths the DELL_S2725HS dev
# server needs.
#
# To undo this script's changes, run:
#   sudo rm /etc/sudoers.d/DellS2725HS

if (( "${EUID}" != 0 )); then
  echo "This script requires root privileges." >&2
  echo "Please re-run with sudo:" >&2
  echo "  sudo ${0}" >&2
  exit 1
fi

# Exit on first failure.
set -e

# Echo commands before executing them, by default to stderr.
set -x

# Exit on unset variable.
set -u

# This script must be run as sudo but needs the name of the user who invoked it.
readonly USERNAME="${SUDO_USER}"

# Change directory to repository root.
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
readonly SCRIPT_DIR
cd "${SCRIPT_DIR}/.."

readonly SUDOERS_SOURCE="./debian-pkg/etc/sudoers.d/DellS2725HS"
readonly SUDOERS_DEST='/etc/sudoers.d/DellS2725HS'

# Create parent folder in case it does not exist.
sudo mkdir -p "$( dirname ${SUDOERS_DEST} )"

# Copy the sudoers file from the debian package while modifying it to apply to
# the invoking user.
sed "s/^DellS2725HS/${USERNAME}/" < "${SUDOERS_SOURCE}" > "${SUDOERS_DEST}"

echo "Wrote DELL_S2725HS dev sudoers.d file to \"${SUDOERS_DEST}\""
